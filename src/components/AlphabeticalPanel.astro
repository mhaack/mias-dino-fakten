---
import { UNCATEGORIZED } from '@constants/constants'
import I18nKey from '../i18n/i18nKey'
import { i18n } from '../i18n/translation'
import { getAlphabeticalPosts } from '../utils/content-utils'
import { getPostUrlBySlug } from '../utils/url-utils'

interface Props {
  tags?: string[]
  categories?: string[]
}
const { tags, categories } = Astro.props

let posts = await getAlphabeticalPosts()

if (Array.isArray(tags) && tags.length > 0) {
  posts = posts.filter(
    post =>
      Array.isArray(post.data.tags) &&
      post.data.tags
        .map(tag => tag.toLowerCase())
        .some(tag => tags.includes(tag)),
  )
}

if (Array.isArray(categories) && categories.length > 0) {
  posts = posts.filter(
    post =>
      (post.data.category &&
        categories.includes(post.data.category.toLowerCase())) ||
      (!post.data.category && categories.includes(UNCATEGORIZED)),
  )
}

const groups: { letter: string; posts: typeof posts }[] = (() => {
  const groupedPosts = posts.reduce(
    (grouped: { [letter: string]: typeof posts }, post) => {
      const letter = post.data.title.substring(0, 1)
      if (!grouped[letter]) {
        grouped[letter] = []
      }
      grouped[letter].push(post)
      return grouped
    },
    {},
  )

  // convert the object to an array
  const groupedPostsArray = Object.keys(groupedPosts).map(key => ({
    letter: key,
    posts: groupedPosts[key],
  }))

  // sort years by latest first
  groupedPostsArray.sort((a, b) => a.letter.localeCompare(b.letter))
  return groupedPostsArray
})()

function formatTag(tag: string[]) {
  return tag.map(t => `#${t}`).join(' ')
}
---

<div>
    {groups.map(group => (
        <div>
            <div class="flex flex-row w-full items-center h-[3.75rem]">
                <div id={`dinos-${group.letter.toLowerCase()}`} class="w-1/6 md:w-1/12 transition text-2xl font-bold text-center text-75">{group.letter}</div>
                <div class="w-5/6 md:w-11/12 transition text-left text-50">{group.posts.length} {group.posts.length == 1 ? i18n(I18nKey.dinoCount): i18n(I18nKey.dinosCount)}</div>
            </div>
            <div class="card-base pr-8 py-6">
            {group.posts.map(post => (
                <a href={getPostUrlBySlug(post.slug)}
                    aria-label={post.data.title}
                    class="group btn-plain block h-10 w-full rounded-lg hover:text-[initial]">
                    <div class="flex flex-row justify-start items-center h-full">
                        <!-- dot and line -->
                        <div class="w-1/6 md:w-1/12 relative dash-line h-full flex items-center">
                            <div class="transition-all mx-auto w-1 h-1 rounded group-hover:h-5
                            bg-[oklch(0.5_0.05_var(--hue))] group-hover:bg-[var(--primary)]
                            outline outline-4 z-50
                            outline-[var(--card-bg)]
                            group-hover:outline-[var(--btn-plain-bg-hover)]
                            group-active:outline-[var(--btn-plain-bg-active)]"></div>
                        </div>
                        <!-- post title -->
                        <div class="w-4/6 md:max-w-7/12 md:w-7/12 text-left font-bold
                            group-hover:translate-x-1 transition-all group-hover:text-[var(--primary)]
                            text-75 pr-8 whitespace-nowrap overflow-ellipsis overflow-hidden">
                            {post.data.title}
                        </div>
                        <!-- tag list -->
                        <div class="hidden md:block md:w-4/12 text-left text-sm transition
                        whitespace-nowrap overflow-ellipsis overflow-hidden
                        text-30"
                        >{formatTag(post.data.tags)}</div>
                    </div>
                </a>
            ))}
            </div>
        </div>
    ))}
</div>

<style>
    @tailwind components;
    @tailwind utilities;

    @layer components {
        .dash-line {
        }
        .dash-line::before {
            content: "";
            @apply w-[10%] h-full absolute -top-1/2 left-[calc(50%_-_1px)] -top-[50%] border-l-[2px]
            border-dashed pointer-events-none border-[var(--line-color)] transition
        }
    }
</style>